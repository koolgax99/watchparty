{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/sumit/Documents/React Projects/watchparty/client/src/components/Chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'http://localhost:5000:/';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, () => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(...messages, message);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => {\n        setMessage('');\n      });\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: message,\n        onChange: event => setMessage(event.target.value),\n        onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"rkXconxaN8z0dNDyuS8MlK04cy0=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/home/sumit/Documents/React Projects/watchparty/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log","target","value","key"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAEzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAWC,UAAX,IAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACa,QAAD,EAAYC,WAAZ,IAA2Bd,QAAQ,CAAC,EAAD,CAAzC;AACI,QAAMe,QAAQ,GAAG,yBAAjB;AAERd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAvB;AACIb,IAAAA,MAAM,GAAGD,EAAE,CAACY,QAAD,CAAX;AAEAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAACX,MAAAA,IAAD;AAAQE,MAAAA;AAAR,KAApB,EAAoC,MAAM,CAEzC,CAFD;AAIA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AAEAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAJD;AAKP,GAhBQ,EAgBP,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAhBO,CAAT;AAkBAhB,EAAAA,SAAS,CAAC,MAAK;AACPG,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBT,OAAD,IAAY;AAC7BG,MAAAA,WAAW,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAX;AACH,KAFD;AAGP,GAJQ,EAIN,CAACE,QAAD,CAJM,CAAT;;AAMI,QAAMQ,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGZ,OAAH,EAAY;AACRP,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0BP,OAA1B,EAAkC,MAAM;AACpCC,QAAAA,UAAU,CAAC,EAAD,CAAV;AACH,OAFD;AAGH;AAEJ,GATD;;AAUIY,EAAAA,OAAO,CAACC,GAAR,CAAYd,OAAZ,EAAqBE,QAArB;AAEJ,sBACA;AAAK,IAAA,SAAS,EAAG,gBAAjB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA,6BACI;AACA,QAAA,KAAK,EAAIF,OADT;AAEA,QAAA,QAAQ,EAAKW,KAAD,IAAWV,UAAU,CAACU,KAAK,CAACI,MAAN,CAAaC,KAAd,CAFjC;AAGA,QAAA,UAAU,EAAIL,KAAK,IAAIA,KAAK,CAACM,GAAN,KAAc,OAAd,GAAwBP,WAAW,CAACC,KAAD,CAAnC,GAA6C;AAHpE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADA;AAgBC,CA5DL;;GAAMjB,I;;KAAAA,I;AA+DN,eAAeA,IAAf","sourcesContent":["import React, {useState , useEffect } from 'react';\nimport queryString from 'query-string'; \nimport io from 'socket.io-client';\n\nlet socket;\n\nconst Chat = ({location}) => {\n\n    const [name, setName] = useState('');\n    const [room, setRoom] = useState('');\n    const [message , setMessage] = useState('');\n    const [messages , setMessages] = useState([]);\n        const ENDPOINT = 'http://localhost:5000:/';\n\nuseEffect(() => {\n    const { name, room } = queryString.parse(location.search)\n        socket = io(ENDPOINT); \n        \n        setName(name);\n        setRoom(room);\n\n        socket.emit('join', {name , room }, () => {\n\n        });\n\n        return () => {\n            socket.emit('disconnect');\n\n            socket.off();\n        }\n},[ENDPOINT, location.search]);\n\nuseEffect(()=> {\n        socket.on('message', (message)=> {\n            setMessages(...messages, message)\n        })\n}, [messages]);\n\n    const sendMessage = (event) => {\n        event.preventDefault();\n\n        if(message) {\n            socket.emit('sendMessage',message,() => {\n                setMessage('');\n            })\n        }\n\n    }\n        console.log(message, messages);\n\n    return (\n    <div className = \"outerContainer\">\n        <div className = \"container\">\n            <input \n            value = {message} \n            onChange = {(event) => setMessage(event.target.value)}\n            onKeyPress = {event => event.key === 'Enter' ? sendMessage(event) : null}\n\n             />\n        \n        </div>\n\n\n    </div>\n    \n    );\n    }\n    \n\nexport default Chat;"]},"metadata":{},"sourceType":"module"}